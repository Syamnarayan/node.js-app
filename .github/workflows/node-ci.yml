name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ROLE_TO_ASSUME:
        required: true
env:
  BUCKET_NAME : "uploadingartifacts"
  AWS_REGION : "us-west-1"
jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: npm install
      - name: NPM Build
        run: npm run build --if-present
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag syamnarayan/kumar:v1
      - name: Docker images list
        run: docker images
      - name: Docker login
        run: |
             docker images
             docker login -u ${{ secrets.docker_hub_username }} -p ${{ secrets.docker_hub_password }}
      - name: Docker push
        run: |
             docker push syamnarayan/kumar:v1          
  deploy:
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
       aws-region: ${{ env.AWS_REGION }}
       role-session-name: MySessionName
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync . s3://BUCKET_NAME
    - name: Copy files to the production website with the AWS CLI
      run: |
        aws s3 sync . s3://BUCKET_NAME
    
